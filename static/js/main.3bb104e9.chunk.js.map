{"version":3,"sources":["components/statistics/Statistics.module.css","components/countainer/Container.module.css","components/feedbackOptions/FeedbackOptions.module.css","components/section/Section.module.css","components/notification/Notification.module.css","components/countainer/Container.js","components/feedbackOptions/FeedbackOptions.js","components/statistics/Statistics.js","components/section/Section.js","components/notification/Notification.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","FeedbackOptions","option","onLeaveFeedback","name","type","Option","onClick","Statisctics","good","neutral","bad","total","positivePercentage","Text","Section","title","Title","Notification","message","App","useState","setGood","setNeutral","setBad","addVoice","e","target","prev","percentage","parseInt","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,2B,mBCAzBD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,qICWlBC,EARG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKC,UAAWC,IAAEH,UAAlB,SAA8BC,K,gBCkBxBG,EAnBS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,gBACjC,OACE,wBAEEC,KAAMF,EACNG,KAAK,SACLN,UAAWC,IAAEM,OACbC,QAASJ,EALX,SAOGD,GANIA,I,gBCuBIM,EA1BK,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAChD,OACE,qCACE,oBAAGd,UAAWC,IAAEc,KAAhB,mBACQ,+BAAOL,OAEf,oBAAGV,UAAWC,IAAEc,KAAhB,sBACW,+BAAOJ,OAElB,oBAAGX,UAAWC,IAAEc,KAAhB,kBACO,+BAAOH,OAEd,oBAAGZ,UAAWC,IAAEc,KAAhB,oBAA8BF,KAC9B,oBAAGb,UAAWC,IAAEc,KAAhB,iCAA2CD,EAA3C,W,gBCCSE,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOlB,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIC,UAAWC,IAAEiB,MAAjB,SAAyBD,IACxBlB,M,gBCIQoB,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGpB,UAAWC,IAAEkB,aAAhB,SAA+BC,KCiHzBC,EA/GH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOX,EAAP,KAAgBa,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOV,EAAP,KAAYa,EAAZ,KAEMC,EAAW,SAACC,GAEhB,OADiBA,EAAEC,OAAXvB,MAEN,IAAK,OACHkB,GAAQ,SAACM,GAAD,OAAUA,EAAO,KACzB,MAEF,IAAK,UACHL,GAAW,SAACK,GAAD,OAAUA,EAAO,KAC5B,MAEF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAUA,EAAO,KACxB,MAEF,QACE,SAIAhB,EAAQH,EAAOC,EAAUC,EAOzBE,EALkC,WACtC,IAAMgB,EAAaC,SAAUrB,EAAOG,EAAS,KAC7C,OAAOA,EAAQiB,EAAa,EAGHE,GAE3B,OACE,eAAC,EAAD,WACE,eAAC,EAAD,CAASf,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBd,OAAO,OAAOC,gBAAiBsB,IAChD,cAAC,EAAD,CAAiBvB,OAAO,UAAUC,gBAAiBsB,IACnD,cAAC,EAAD,CAAiBvB,OAAO,MAAMC,gBAAiBsB,OAEjD,cAAC,EAAD,CAAST,MAAM,aAAf,SACGJ,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcM,QAAQ,4BCrDhCa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3bb104e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"Statistics_Text__2CZoU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__TEy29\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Option\":\"FeedbackOptions_Option__1vRVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Section_Title__2V5nI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__tPboS\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Container.module.css\";\n\nconst Container = ({ children }) => {\n  return <div className={s.Container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ option, onLeaveFeedback }) => {\n  return (\n    <button\n      key={option}\n      name={option}\n      type=\"button\"\n      className={s.Option}\n      onClick={onLeaveFeedback}\n    >\n      {option}\n    </button>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  option: PropTypes.string.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nconst Statisctics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <p className={s.Text}>\n        good: <span>{good}</span>\n      </p>\n      <p className={s.Text}>\n        neutral: <span>{neutral}</span>\n      </p>\n      <p className={s.Text}>\n        bad: <span>{bad}</span>\n      </p>\n      <p className={s.Text}>Total: {total}</p>\n      <p className={s.Text}>Positive feedbacks: {positivePercentage}%</p>\n    </>\n  );\n};\n\nStatisctics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statisctics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h1 className={s.Title}>{title}</h1>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => {\n  return <p className={s.Notification}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from \"react\";\nimport Container from \"./components/countainer\";\nimport FeedbackOptions from \"./components/feedbackOptions\";\nimport Statisctics from \"./components/statistics\";\nimport Section from \"./components/section\";\nimport Notification from \"./components/notification\";\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const addVoice = (e) => {\n    const { name } = e.target;\n    switch (name) {\n      case \"good\":\n        setGood((prev) => prev + 1);\n        break;\n\n      case \"neutral\":\n        setNeutral((prev) => prev + 1);\n        break;\n\n      case \"bad\":\n        setBad((prev) => prev + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const total = good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = () => {\n    const percentage = parseInt((good / total) * 100);\n    return total ? percentage : 0;\n  };\n\n  const positivePercentage = countPositiveFeedbackPercentage();\n\n  return (\n    <Container>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions option=\"good\" onLeaveFeedback={addVoice} />\n        <FeedbackOptions option=\"neutral\" onLeaveFeedback={addVoice} />\n        <FeedbackOptions option=\"bad\" onLeaveFeedback={addVoice} />\n      </Section>\n      <Section title=\"Statistics\">\n        {total ? (\n          <Statisctics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </Container>\n  );\n};\n\n/* class App extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n  };\n\n  addVoice = (option) => {\n    this.setState((prevState) => ({ [option]: prevState[option] + 1 }));\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((acc, curr) => acc + curr, 0);\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const percentage = parseInt((this.state.good / total) * 100);\n    return total ? percentage : 0;\n  };\n\n  render() {\n    const [good, neutral, bad] = Object.keys(this.state);\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions option={good} onLeaveFeedback={this.addVoice} />\n          <FeedbackOptions option={neutral} onLeaveFeedback={this.addVoice} />\n          <FeedbackOptions option={bad} onLeaveFeedback={this.addVoice} />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statisctics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n} */\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}